<= AngleAxis =>
angle: 1.5708
axis: [0.57735, 0.57735, 0.57735]
quaternion: 0.707107 + 0.408248i + 0.408248j + 0.408248k

<= FromTo =>
0.707107 + 0.707107k
[0, 1, 0]
0.707107 + 0.707107i
[0, 0, 1]
1k
[-1, 0, 0]

<= BasisVectors =>
1
1i
1j
1k
0.880476 - 0.115917i - 0.364705j + 0.279848k
0.115917 + 0.880477i + 0.279848j + 0.364705k
0.364705 - 0.279848i + 0.880476j - 0.115917k
0.279848 + 0.364705i - 0.115917j - 0.880476k
0.364705 - 0.279848i - 0.880476j + 0.115917k
0.279848 + 0.364705i + 0.115917j + 0.880476k
0.880476 - 0.115917i + 0.364705j - 0.279848k
0.115917 + 0.880477i - 0.279848j - 0.364705k

<= Interpolate =>
-NegativeZAxis-
0.92388 - 0.382683k
0.707107 - 0.707107k
0.382683 - 0.92388k
-1k
-PositiveAxis-
0.92388 + 0.220942i + 0.220942j + 0.220942k
0.707107 + 0.408248i + 0.408248j + 0.408248k
0.382683 + 0.533402i + 0.533402j + 0.533402k
0.57735i + 0.57735j + 0.57735k
0.57735i + 0.57735j + 0.57735k

<= Conjugate =>
quaternion: 1 + 2i + 3j + 4k
conjugate: 1 - 2i - 3j - 4k

<= Multiplication =>
quaternion 1: 1 + 2i + 3j + 4k
quaternion 2: 1 + 2i + 3j + 4k
result: -12 + 6i + 24j + 12k

<= EulerAngles =>
[1.5708, -0, 0]
[0, 1.5708, 0]
[0, -0, 1.5708]

<= Rotate =>
[0, 0, 1]
[-1, 0, -1]
[0, 1, 0]
[-1, 0, 0]

